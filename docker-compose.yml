
services:

  # Postgres DB
  database:
    image: postgres:17.3-alpine
    container_name: alumni-database
    volumes:
      - db:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB}

  # Node Express Server
  backend:
    build: ./backend
    container_name: alumni-backend
    ports:
      - "8081:8081"
    depends_on:
      database:
        condition: service_healthy
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      PORT: ${PORT}
      AUTH_COOKIE_NAME: ${AUTH_COOKIE_NAME}
      DB: ${DB}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      CLOUDINARY_URL: ${CLOUDINARY_URL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      QRCODE_URL: ${QRCODE_URL}
      EMAILJS_PUBLIC_KEY: ${EMAILJS_PUBLIC_KEY}
      EMAILJS_SERVICE_ID: ${EMAILJS_SERVICE_ID}
      EMAILJS_TEMPLATE_ID: ${EMAILJS_TEMPLATE_ID}
      EMAILJS_PRIVATE_KEY: ${EMAILJS_PRIVATE_KEY}


  # Angular Frontend
  frontend:
    build: ./frontend
    container_name: alumniu-frontend
    ports:
      - "4200:4200"
    depends_on:
      backend:
        condition: service_started

volumes:
  db: